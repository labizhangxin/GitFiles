第一章：部署环境安装linux

1.5 RPM 红帽软件包管理器
rpm 只能安装已经下载到本地机器上的rpm 包.能自动分析和记录软件之间的依赖关系
安装软件的命令格式 rpm -ivh filename.rpm
升级软件的命令格式rpm -Uvh filename.rpm
卸载软件的命令格式rpm -e filename.rpm
查询软件描述信息的命令格式rpm -qpi filename.rpm
列出软件文件信息的命令格式rpm -qpl filename.rpm
查询文件属于哪个RPM 的命令格式rpm -qf filename
1.6 yum软件仓库
yum是用来管理rpm的，就跟maven管理jar包相似。可以自动联网安装，能更新系统，自动处理包与包之间的依赖关系

第二章：新手必须掌握的Linux 命令

2.2 执行查看帮助命令
man命令中常用按键以及用途
按键 用途
空格键 向下翻一页
PaGe down 向下翻一页
PaGe up 向上翻一页
home 直接前往首页
end 直接前往尾页
/ 从上至下搜索某个关键词，如“/linux”
? 从下至上搜索某个关键词，如“?linux”
n 定位到下一个搜索到的关键词
N 定位到上一个搜索到的关键词
q 退出帮助文档

man命令帮助信息的结构以及意义
结构名称 代表意义
NAME 命令的名称
SYNOPSIS 参数的大致使用方法
DESCRIPTION 介绍说明
EXAMPLES 演示（附带简单说明）
OVERVIEW 概述
DEFAULTS 默认的功能
OPTIONS 具体的可用选项（带介绍）
ENVIRONMENT 环境变量
FILES 用到的文件
SEE ALSO 相关的资料
HISTORY 维护历史与联系方式

2.3 常用系统工作命令

1. echo 命令

echo 命令用于在终端输出字符串或变量提取后的值，格式为“echo [字符串 | $变量]”

2. date命令

只需在强大的date 命令中输入以“+”号开头的参数，即可按照指定格式来输出系统的时间或日期

3 重启命令

root下使用reboot


4 关机命令

root下使用poweroff

5 wget 命令

wget 命令用于在终端中下载网络文件，格式为“wget [参数] 下载地址”。
-b 后台下载模式
-P 下载到指定目录
-t 最大尝试次数
-c 断点续传
-p 下载页面内所有资源，包括图片、视频等
-r 递归下载

6 ps 命令
 ps 命令用于查看系统中的进程状态，格式为“ps [参数]”。
-a 显示所有进程（包括其他用户的进程）
-u 用户以及其他详细信息
-x 显示没有控制终端的进程
-e 显示所有进程。
-f 全格式。
-h 不显示标题。
-l 长格式。
-w 宽输出。
grep （缩写来自Globally search a Regular Expression and Print）是一种强大的文本搜索工具，它能使用特定模式匹配（包括正则表达式）搜索文本，并默认输出匹配行。Unix的grep家族包括grep、egrep和fgrep。Windows系统下类似命令FINDSTR。 [1]

Linux 系统中时刻运行着许多进程，如果能够合理地管理它们，则可以优化系统的性能。在
Linux 系统中，有5 种常见的进程状态，分别为运行、中断、不可中断、僵死与停止，其各自
含义如下所示。
􀂾 R（运行）：进程正在运行或在运行队列中等待。
􀂾 S（中断）：进程处于休眠中，当某个条件形成后或者接收到信号时，则脱离该
状态。
􀂾 D（不可中断）：进程不响应系统异步信号，即便用kill 命令也不能将其中断。
􀂾 Z（僵死）：进程已经终止，但进程描述符依然存在, 直到父进程调用wait4()系统函数
后将进程释放。
􀂾 T（停止）：进程收到停止信号后停止运行。
 7 top 命令
top 命令用于动态地监视进程活动与系统负载等信息，其格式为top。
top 命令相当强大，能够动态地查看系统运维状态，完全将它看作Linux 中的“强化版的
Windows 任务管理器”。

第 1 行：系统时间、运行时间、登录终端数、系统负载（三个数值分别为1 分钟、5
分钟、15 分钟内的平均值，数值越小意味着负载越低）。
􀂾 第 2 行：进程总数、运行中的进程数、睡眠中的进程数、停止的进程数、僵死的进程
数。
􀂾 第 3 行：用户占用资源百分比、系统内核占用资源百分比、改变过优先级的进程资源
百分比、空闲的资源百分比等。
注：
第 3 行中的数据均为CPU 数据并以百分比格式显示，例如“97.1 id”意味着有97.1%
的CPU 处理器资源处于空闲。
􀂾 第 4 行：物理内存总量、内存使用量、内存空闲量、作为内核缓存的内存量。
􀂾 第 5 行：虚拟内存总量、虚拟内存使用量、虚拟内存空闲量、已被提前加载的内存量。

 8．pidof 命令
pidof 命令用于查询某个指定服务进程的PID 值，格式为“pidof [参数] [服务名称]”。
每个进程的进程号码值（PID）是唯一的，因此可以通过PID 来区分不同的进程。例如，
可以使用如下命令来查询本机上sshd 服务程序的PID：
[root@linuxprobe ~]# pidof sshd
2156
 9．kill 命令
kill 命令用于终止某个指定PID 的服务进程，格式为“kill [参数] [进程PID]”。
接下来，我们使用kill 命令把上面用pidof 命令查询到的PID 所代表的进程终止掉，其命
令如下所示。这种操作的效果等同于强制停止sshd 服务。
[root@linuxprobe ~]# kill 2156
 10．killall 命令
killall 命令用于终止某个指定名称的服务所对应的全部进程，格式为：“killall [参数] [进
程名称]”。
通常来讲，复杂软件的服务程序会有多个进程协同为用户提供服务，如果逐个去结束这
些进程会比较麻烦，此时可以使用killall 命令来批量结束某个服务程序带有的全部进程。下
面以httpd 服务程序为例，来结束其全部进程。由于RHEL7 系统默认没有安装httpd 服务程序，
因此大家此时只需看操作过程和输出结果即可，等学习了相关内容之后再来实践。
[root@linuxprobe ~]# pidof httpd
13581 13580 13579 13578 13577 13576
[root@linuxprobe ~]# killall httpd
[root@linuxprobe ~]# pidof httpd

2.7 文件目录管理命令
touch 命令用于创建空白文件或设置文件的时间，格式为“touch [选项] [文件]”
-a 仅修改“读取时间”（atime）
-m 仅修改“修改时间”（mtime）
-d 同时修改atime 与mtime
mkdir 命令用于创建空白的目录，格式为“mkdir [选项] 目录”
cp 命令用于复制文件或目录，格式为“cp [选项] 源文件目标文件”
-p 保留原始文件的属性
-d 若对象为“链接文件”，则保留该“链接文件”的属性
-r 递归持续复制（用于目录）
-i 若目标文件存在则询问是否覆盖
-a 相当于-pdr（p、d、r 为上述参数）
mv 命令用于剪切文件或将文件重命名，格式为“mv [选项] 源文件 [目标路径|目标文件名]”
rm 命令用于删除文件或目录，格式为“rm [选项] 文件”。
dd 命令用于按照指定大小和个数的数据块来复制文件或转换文件，格式为“dd [参数]”
if 输入的文件名称
of 输出的文件名称
bs 设置每个“块”的大小
count 设置要复制“块”的个数
file 命令用于查看文件的类型，格式为“file 文件名”。
2.8 打包压缩与搜索命令
1 tar 命令用于对文件进行打包压缩或解压，格式为“tar [选项] [文件]”。
参数 作用
-c 创建压缩文件
-x 解开压缩文件
-t 查看压缩包内有哪些文件
-z 用Gzip 压缩或解压
-j 用bzip2 压缩或解压
-v 显示压缩或解压的过程
-f 目标文件名
-p 保留原始的权限与属性
-P 使用绝对路径来压缩
-C 指定解压到的目录
tar -czvf 压缩包名称.tar.gz 要打包的目录”命令把指定的文件进行打包压缩；
相应的解压命令为“tar -xzvf 压缩包名称.tar.gz”

2 grep 命令用于在文本中执行关键词搜索，并显示匹配的结果，格式为“grep [选项] [文件]”。
-b 将可执行文件（binary）当作文本文件（text）来搜索
-c 仅显示找到的行数
-i 忽略大小写
-n 显示行号
-v 反向选择—仅列出没有“关键词”的行

3find 命令用于按照指定条件来查找文件，格式为“find [查找路径] 寻找条件操作”。

find /etc -name "host*" -print(该目录中所有以host 开头的文件列表)
find / -perm -4000 -print(在整个系统中搜索权限中包括SUID 权限的所有文件)
find / -user linuxprobe -exec cp -a {} /root/findresults/ \;（找出归属于root用户的文件，复制到这个目录，重点是“-exec {} \;”参数，其中的{}表示find 命令搜索出的每一个文
件，并且命令的结尾必须是“\;”。）








第三章： 管道符、重定向与环境变量

3.1 输入输出重定向
简而言之，输入重定向是指把文件导入到命令中，而输出重定向则是指把原本要输出到
屏幕的数据信息写入到指定文件中。在日常的学习和工作中，相较于输入重定向，我们使用
输出重定向的频率更高，所以又将输出重定向分为了标准输出重定向和错误输出重定向两种
不同的技术，以及清空写入与追加写入两种模式。
􀂾 标准输入重定向（STDIN，文件描述符为0）：默认从键盘输入，也可从其他文件或命
令中输入。
􀂾 标准输出重定向（STDOUT，文件描述符为1）：默认输出到屏幕。
􀂾 错误输出重定向（STDERR，文件描述符为2）：默认输出到屏幕。

输入重定向中用到的符号及其作用
符号 作用
命令 < 文件将文件作为命令的标准输入
命令 << 分界符从标准输入中读入，直到遇见分界符才停止
命令 < 文件1 > 文件2 将文件1 作为命令的标准输入并将标准输出到文件2

输出重定向中用到的符号及其作用
符号 作用
命令 > 文件将标准输出重定向到一个文件中（清空原有文件的数据）
命令 2> 文件将错误输出重定向到一个文件中（清空原有文件的数据）
命令 >> 文件将标准输出重定向到一个文件中（追加到原有内容的后面）
命令 2>> 文件将错误输出重定向到一个文件中（追加到原有内容的后面）
命令 >> 文件 2>&1
或
命令 &>> 文件
将标准输出与错误输出共同写入到文件中（追加到原有内容的
后面）

输入重定向EX:
wc -l < readme.txt（显示readme.txt文件行数）
上述命令实际上等同于接下来要学习的 cat readme.txt | wc -l 的管道符命令组合。

3.2 管道符命令
ls -l /etc/ | more（不会一股脑地显示在屏幕上）
“命令A | 命令B | 命令C”

3.3 命令行的通配符
*匹配零个或者多个
?匹配单个字符
[0~9] 匹配包含的任意数字
[a~z]]匹配包含的任意字母

3.4 常用转义字符

􀂾 反斜杠（\）：使反斜杠后面的一个变量变为单纯的字符串。
􀂾 单引号（''）：转义其中所有的变量为单纯的字符串。
􀂾 双引号（""）：保留其中的变量属性，不进行转义处理。
􀂾 反引号（``）：把其中的命令执行后返回结果。

PRICE=5
echo "Price is $PRICE"
echo "Price is $$PRICE"（$$作用是显示当前程序的进程ID 号码）

3.5 重要的环境变量
alias 命令来创建一个属于自己的命令别名，格式为“alias 别名=命令”
若要取消一个命令别名，则是用unalias 命令，格式为“unalias 别名”
“type 命令名称”来判断用户输入的命令是内部命令还是外部命令

按变量的周期划分
永久变量：通过修改配置文件，配置之后变量永久生效
临时性变量：使用命令如export等命令设置，设置之后马上生效。当关闭shell的时候失效（这种主要用于测试比较多）
[root@mail ~]#env  显示所有变量

按照影响范围分
用户变量（局部变量）：修改的设置只对某个用户的路径或执行起作用
系统变量（全局变量）：影响范围是整个系统



第五章: 用户身份与文件权限
5.1 用户身份与能力
5.1.1 useradd命令

linux命令useradd添加用户详解
1.作用
useradd或adduser命令用来建立用户帐号和创建用户的起始目录，使用权限是超级用户。

　　2.格式

　　useradd [-d home] [-s shell] [-c comment] [-m [-k template]] [-f inactive] [-e expire ] [-p passwd] [-r] name

3.主要参数

　　-c：加上备注文字，备注文字保存在passwd的备注栏中。

　　-d：指定用户登入时的主目录，替换系统默认值/home/<用户名>

　　-D：变更预设值。

　　-e：指定账号的失效日期，日期格式为MM/DD/YY，例如06/30/12。缺省表示永久有效。

　　-f：指定在密码过期后多少天即关闭该账号。如果为0账号立即被停用；如果为-1则账号一直可用。默认值为-1.

　　-g：指定用户所属的群组。值可以使组名也可以是GID。用户组必须已经存在的，期默认值为100，即users。

　　-G：指定用户所属的附加群组。

　　-m：自动建立用户的登入目录。

　　-M：不要自动建立用户的登入目录。

　　-n：取消建立以用户名称为名的群组。

　　-r：建立系统账号。

　　-s：指定用户登入后所使用的shell。默认值为/bin/bash。

　　-u：指定用户ID号。该值在系统中必须是唯一的。0~499默认是保留给系统用户账号使用的，所以该值必须大于499。

4.说明

　　useradd可用来建立用户账号，它和adduser命令是相同的。账号建好之后，再用passwd设定账号的密码。使用useradd命令所建立的账号，实际上是保存在/etc/passwd文本文件中。

5.应用实例

建立一个新用户账户testuser1，并设置UID为544，主目录为/usr/testuser1，属于users组：

 代码如下	复制代码
　　#useradd -u 544 -d /usr/testuser1  -g users -m  testuser1


加-m 如果主目录不存在则自动创建


6.例

使用管理员账号登陆系统，建立用户tmp_3452 密码3sdt5:Eawhg

添加用户命令：

 代码如下	复制代码
[root@ptr228 ~]# adduser tmp_3452

修改密码命令：

[root@ptr228 ~]# passwd tmp_3452

在系统出现提示输入密码是输入密码：3sdt5:Eawhg 系统提示输入确认密码后再输入一次。OK添加成功。


7.useradd批量添加用户

使用useradd时，如果后面不添加任何参数选项，例如：#sudo useradd test创建出来的用户将是默认“三无”用户：一无Home Directory，二无密码，三无系统Shell。

步骤如下：

(1)建立用户名列表文件username.txt　(同上)

(2)创建用户密码对应文件serc.txt，格式为username:password　(注意文件的格式)   

 代码如下	复制代码
stu1:tt1
stu2:tt2
stu3:tt3
stu4:tt4
stu5:tt5
stu6:tt6 　
　

(3)批量添加的脚本文件aa.sh

 代码如下	复制代码
##添加用户，并且在/home/ 下为用户生成用户目录。cat < username.txt | xargs -n 1 useradd -m##批处理模式下更新密码
chpasswd < serc.txt##将上述的密码转换到密码文件和组文件
pwconv##结束验证信息
echo "OK 新建完成"(4)执行该脚本文件，查看执行过程

root@liu:/home/liu/Desktop/Dos# sh aa.sh

新建完成         useradd命令，在执行没有出错的情况下，不会输出任何的信息，不会与用户交互。但是用户必须要记住那些设置项目，否则添加的用户可能出现一些预想不到的结果。

 

8.新创建一个oracle用户，这初始属于oinstall组，且同时让他也属于dba组。

＃useradd oracle -g oinstall -G dba

新创建一个oracle用户，这初始属于oinstall组，且同时让他也属于dba组。

 

9.无法使用shell，且其用户目录至/var/servlet/service

＃useradd tomcat  -d /var/servlet/service -s /sbin/nologin

无法使用shell，且其用户目录至/var/servlet/service

其实生活很美好，只是你想的太多了。没有，不会，有差距很正常，因为我不会

5.3文件的权限和归属

5.3.2 SGID

chmod 命令是一个非常实用的命令，能够用来设置文件或目录的权限，格式为“chmod [参
数] 权限文件或目录名称”。如果要把一个文件的权限设置成其所有者可读可写可执行、所
属组可读可、其他人没有任何权限，则相应的字符法表示为rwxrw----，其对应的数字法表示
为760。通过前面的基础学习和当前的练习实践，现在大家可以感受到使用数字法来设置文件
权限的便捷性了吧。
[root@linuxprobe ~]# ls -al test
-rw-rw-r--. 1 linuxprobe root 15 Feb 11 11:50 test
[root@linuxprobe ~]# chmod 760 test
[root@linuxprobe ~]# ls -l test
-rwxrw----. 1 linuxprobe root 15 Feb 11 11:50 test
除了设置文件或目录的权限外，还可以设置文件或目录的所有者和所属组，这里使用的
命令为chown，其格式为“chown [参数] 所有者:所属组文件或目录名称”。
chmod 和chown 命令是用于修改文件属性和权限的最常用命令，它们还有一个特别的共
性，就是针对目录进行操作时需要加上大写参数-R 来表示递归操作，即对目录内所有的文件
进行整体操作


5.6 su命令和sudo服务

su在不退出登陆的情况下可以切换用户 su - 用户 强烈建议加上- ，会更换一切信息，比如环境变量
但是 su - root，输入密码时可能会泄露密码，所以可以使用sudo命令赋予指定用户相应的权限
visudo 例如 eapadm ALL=(ALL) ALL